<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mapper.AdProductMapper"> 

<!-- 1차 카테고리 목록 -->
<select id="getCategoryList" resultType="com.demo.domain.CategoryVO">
SELECT 
	CATE_CODE,  CATE_CODE_PRT, CATE_NAME
FROM
	CATEGORY_TBL
WHERE
	CATE_CODE_PRT IS NULL
</select>

<!-- 선택한 1차 카테고리에 따른 2차 카테고리 목록 -->
<select id="getSubCategoryList" resultType="com.demo.domain.CategoryVO">
SELECT
	CATE_CODE,  CATE_CODE_PRT, CATE_NAME
FROM
	CATEGORY_TBL
WHERE
	CATE_CODE_PRT = #{cate_code}
</select>

<!-- 상품 정보 저장 -->
<insert id="productInsert">
INSERT INTO PRODUCT_TBL
	( PDT_NUM, 
	CATE_CODE, 
	CATE_CODE_PRT, 
	PDT_NAME, 
	PDT_PRICE, 
	PDT_DISCOUNT,
	PDT_DIS_PRICE,
	PDT_COMPANY, 
	PDT_DETAIL, 
	PDT_IMG_FOLDER, 
	PDT_IMG, 
	PDT_AMOUNT, 
	PDT_BUY )
VALUES
	(
	SEQ_PRODUCT_NUM.NEXTVAL, 
	#{cate_code},
	#{cate_code_prt},
	#{pdt_name},
	#{pdt_price},
	#{pdt_discount},
	ROUND(#{pdt_price} * (1-(#{pdt_discount}/100)), -1),
	#{pdt_company},
	#{pdt_detail},
	#{pdt_img_folder},
	#{pdt_img},
	#{pdt_amount},
	#{pdt_buy}
	)
</insert>

<!-- 검색 조건 -->
<sql id="criteria">
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<foreach collection="typeArr" item="type">
			<trim prefix="OR">
				<choose>
					<when test="type == 'N'.toString()">
						PDT_NAME like '%' || #{keyword} || '%'
					</when>
					<when test="type == 'C'.toString()">
						PDT_COMPANY like '%' || #{keyword} || '%'
					</when>
				</choose>
			</trim>
		</foreach>
	</trim>
</sql>

<!-- 상품 목록. 인라인뷰에서 언급된 목록들만 select 할 수 있다. CDATA섹션(부등호 사용으로 인한 에러 방지). 
인라인 뷰 이유: Rownum를 이용해 뽑아 온 데이터들 중에서 rownum을 이용한 데이터를 선택하기 위해.-->
<select id="getProductList" resultType="com.demo.domain.ProductVO">
<![CDATA[
	SELECT 
		PDT_NUM, 
		CATE_CODE, 
		CATE_CODE_PRT, 
		PDT_NAME, 
		PDT_PRICE, 
		PDT_DISCOUNT, 
		PDT_DIS_PRICE,
		PDT_IMG_FOLDER, 
		PDT_IMG,  
		PDT_BUY, 
		PDT_DATE_SUB, 
		PDT_DATE_UP
	FROM (
		SELECT /*+ INDEX_DESC (PRODUCT_TBL PK_PRODUCT_NUM) */
			ROWNUM RN,
			PDT_NUM, 
			CATE_CODE, 
			CATE_CODE_PRT, 
			PDT_NAME, 
			PDT_PRICE, 
			PDT_DISCOUNT, 
			PDT_COMPANY, 
			PDT_DETAIL, 
			PDT_IMG_FOLDER, 
			PDT_IMG, 
			PDT_AMOUNT, 
			PDT_BUY, 
			PDT_DATE_SUB, 
			PDT_DATE_UP, 
			PDT_DIS_PRICE
		FROM
			PRODUCT_TBL
		WHERE
]]>
			<include refid="criteria" />
<![CDATA[
			ROWNUM <= #{pageNum} * #{amount}
		)
	WHERE
		RN > (#{pageNum} - 1) * #{amount}
]]>
</select>

<!-- 상품 갯수 -->
<select id="getProductCount" resultType="int">
SELECT 
	COUNT(*)
FROM 
	PRODUCT_TBL
WHERE
	<include refid="criteria" />
	PDT_NUM > 0
</select>

<!-- 수정할 상품 정보 -->
<select id="getProductByNum" resultType="com.demo.domain.ProductVO">
SELECT
	PDT_NUM, 
	CATE_CODE, 
	CATE_CODE_PRT, 
	PDT_NAME, 
	PDT_PRICE, 
	PDT_DISCOUNT, 
	PDT_COMPANY, 
	PDT_DETAIL, 
	PDT_IMG_FOLDER, 
	PDT_IMG, 
	PDT_AMOUNT, 
	PDT_BUY, 
	PDT_DATE_SUB, 
	PDT_DATE_UP, 
	PDT_DIS_PRICE
FROM
	PRODUCT_TBL
WHERE
	PDT_NUM = #{pdt_num}
</select>

<!-- 상품 수정 -->
<update id="productModify">
UPDATE 
	PRODUCT_TBL
SET
	CATE_CODE = #{cate_code}, 
	CATE_CODE_PRT = #{cate_code_prt}, 
	PDT_NAME = #{pdt_name}, 
	PDT_PRICE = #{pdt_price}, 
	PDT_DISCOUNT = #{pdt_discount}, 
	PDT_COMPANY = #{pdt_company}, 
	PDT_DETAIL = #{pdt_detail}, 
	PDT_IMG_FOLDER = #{pdt_img_folder}, 
	PDT_IMG = #{pdt_img}, 
	PDT_AMOUNT = #{pdt_amount}, 
	PDT_BUY = #{pdt_buy}, 
	PDT_DATE_UP = SYSDATE, 
	PDT_DIS_PRICE = ROUND(#{pdt_price} * (1-(#{pdt_discount}/100)), -1)
WHERE
	PDT_NUM = #{pdt_num}
</update>

</mapper>